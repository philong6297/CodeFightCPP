/*
The look-and-say sequence is defined as follows:

Its first term is equal to 1.
The nth term (for n > 1) is generated by reading the (n-1)th term.
Thus,

the second term is 11, generated by reading the first term as "One 1" (There is one 1 in previous term);
the third term is 21, generated by reading the second term as "Two 1";
the fourth term is 1211, generated by reading the third term as "One 2 One 1";
and so on.

Given some element of the look-and-say sequence, generate the next one.
*/

std::string lookAndSaySequenceNextElement(std::string element) {
	string ret;
	int count = 1;
	int index = 0;
	for (int i = 1; i<size(element); i++)
		if (element[i] == element[index])
			count++;
		else {
			ret += to_string(count);
			ret += element[index];
			index = i;
			count = 1;
		}
		ret += to_string(count);
		ret += element[index];
		return ret;
}
